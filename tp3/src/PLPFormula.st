Object subclass: #PropositionalFormula	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLPFormula'!!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/19/2016 13:24'!==> aFormula	"comment stating purpose of message"	^Implication of: self and: aFormula.! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/19/2016 13:25'!not	^Negation of: self.! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/19/2016 13:25'!| aFormula	"comment stating purpose of message"	^Disjunction of: self and: aFormula.! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/20/2016 18:44'!hash	^ (self asString) hash.! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/20/2016 18:44'!= aForm	^ self asString = aForm asString.! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/20/2016 17:34'!printString	^ (self asString) printDirectlyToDisplay! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/20/2016 17:36'!printOn: aStream	^ (self asString) printOn: aStream.! !!PropositionalFormula methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/19/2016 13:24'!& aFormula	"comment stating purpose of message"	^Conjunction of: self and: aFormula.! !PropositionalFormula subclass: #BinaryPropositionalFormula	instanceVariableNames: 'l_prop r_prop'	classVariableNames: ''	poolDictionaries: ''	category: 'PLPFormula'!!BinaryPropositionalFormula methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/19/2016 14:13'!value: aCollection	| lvalue rvalue m|	lvalue := l_prop value: aCollection.	rvalue := r_prop value: aCollection.	m := Message selector: (self class) operation argument: rvalue.	^ m sendTo: lvalue.! !!BinaryPropositionalFormula methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/20/2016 16:52'!allPropVars	|v_l v_r|	v_l := l_prop allPropVars.	v_r := r_prop allPropVars.	^ v_l union: v_r.! !!BinaryPropositionalFormula methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/20/2016 18:47'!lprop	^ l_prop.! !!BinaryPropositionalFormula methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/20/2016 19:17'!asString	|s_l s_r|	s_l := l_prop asString.	s_r := r_prop asString.	(l_prop isKindOf: BinaryPropositionalFormula) ifTrue: [ s_l := '( ' , s_l , ' )' ].	(r_prop isKindOf: BinaryPropositionalFormula) ifTrue: [ s_r := '( ' , s_r , ' )' ].	^ s_l , ' ' , ((self class) operation) asString , ' ' , s_r.! !!BinaryPropositionalFormula methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/20/2016 18:47'!rprop	^ r_prop.! !!BinaryPropositionalFormula methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/20/2016 19:01'!toNNF	^ (self class) of: (l_prop toNNF) and: (r_prop toNNF).! !!BinaryPropositionalFormula methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/19/2016 12:52'!lprop: alprop rprop: arprop	l_prop := alprop.	r_prop := arprop.	^self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BinaryPropositionalFormula class	instanceVariableNames: ''!!BinaryPropositionalFormula class methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/19/2016 14:10'!of: alprop and: arprop	|res|	res := self new.	res lprop: alprop rprop: arprop.	^res.! !BinaryPropositionalFormula subclass: #Conjunction	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLPFormula'!!Conjunction methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/20/2016 18:45'!negate	^ Disjunction of: (l_prop negate) and: (r_prop negate)! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Conjunction class	instanceVariableNames: ''!!Conjunction class methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/19/2016 14:11'!operation	^#&! !BinaryPropositionalFormula subclass: #Disjunction	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLPFormula'!!Disjunction methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/20/2016 18:46'!negate	^ Conjunction of: (l_prop negate) and: (r_prop negate)! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Disjunction class	instanceVariableNames: ''!!Disjunction class methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/19/2016 14:12'!operation	^#|! !BinaryPropositionalFormula subclass: #Implication	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'PLPFormula'!!Implication methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/20/2016 19:03'!toNNF	^ Disjunction of: (l_prop not toNNF) and: (r_prop toNNF)! !!Implication methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/20/2016 18:46'!negate	^ Conjunction of: l_prop and: (r_prop negate)! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Implication class	instanceVariableNames: ''!!Implication class methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/19/2016 14:12'!operation	^#==>! !PropositionalFormula subclass: #Negation	instanceVariableNames: 'prop'	classVariableNames: ''	poolDictionaries: ''	category: 'PLPFormula'!!Negation methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/19/2016 13:11'!value: aCollection	| value|	value := prop value: aCollection.	^ value not.! !!Negation methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/19/2016 12:59'!allPropVars	^ prop allPropVars.! !!Negation methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/20/2016 18:47'!prop	^ prop.! !!Negation methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/19/2016 12:58'!prop: aprop	"comment stating purpose of message"	prop := aprop.	^self! !!Negation methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/20/2016 19:17'!asString	|s|	s := prop asString.	(prop isKindOf: BinaryPropositionalFormula) ifTrue: [ s := '( ' , s , ' )' ].	^ '¬', s.! !!Negation methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/20/2016 19:02'!negate	^ prop.! !!Negation methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/20/2016 19:16'!toNNF	(prop isKindOf: PropositionalVariable) ifTrue: [ ^ self. ].	^ prop negate toNNF.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Negation class	instanceVariableNames: ''!!Negation class methodsFor: 'creating' stamp: 'AzucarSintactico 6/19/2016 12:57'!of: aprop	|res|	res := self new.	res prop: aprop.	^res! !PropositionalFormula subclass: #PropositionalVariable	instanceVariableNames: 'nombre'	classVariableNames: ''	poolDictionaries: ''	category: 'PLPFormula'!!PropositionalVariable methodsFor: 'accesing' stamp: 'AzucarSintactico 6/20/2016 19:02'!toNNF	^ self.! !!PropositionalVariable methodsFor: 'accesing' stamp: 'AzucarSintactico 6/20/2016 18:48'!negate	^ Negation of: self.! !!PropositionalVariable methodsFor: 'accesing' stamp: 'AzucarSintactico 6/19/2016 13:01'!allPropVars	^ Set with: nombre.! !!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/19/2016 13:12'!value: aCollection	^ aCollection includes: nombre.! !!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/20/2016 17:21'!asString	^ nombre asString.! !!PropositionalVariable methodsFor: 'as yet unclassified' stamp: 'AzucarSintactico 6/19/2016 13:00'!nombre: aString	nombre := aString.	^self.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PropositionalVariable class	instanceVariableNames: ''!!PropositionalVariable class methodsFor: 'creating' stamp: 'AzucarSintactico 6/19/2016 12:59'!named: aString 	| res |	res := self new.	res nombre: aString.	^res! !